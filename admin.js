import { db } from './firebase.js';
import {
  ref,
  get,
  update,
  remove
} from "https://www.gstatic.com/firebasejs/10.12.0/firebase-database.js";

const container = document.getElementById("adminLoanList");
const usersRef = ref(db, "users");

get(usersRef).then(snapshot => {
  if (!snapshot.exists()) {
    container.innerHTML = "<p>üôÅ ‡¶ï‡ßã‡¶®‡ßã ‡¶≤‡ßã‡¶® ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø‡•§</p>";
    return;
  }

  const users = snapshot.val();
  container.innerHTML = "";

  Object.entries(users).forEach(([userKey, data]) => {
    Object.entries(data.loans || {}).forEach(([loanId, loan]) => {
      const userName = userKey.split("_")[0];
      const userPhone = userKey.split("_")[1];

      const statusText = loan.status === "approved"
        ? `<span class="approved">‚úÖ Approved</span>`
        : `<span class="pending">‚åõ Pending</span>`;

      const div = document.createElement("div");

      // Schedule rows with date column
      const scheduleRows = loan.schedule.map((inst, i) => `
        <tr>
    <td>${inst.installment}</td>
    <td>${inst.amount}</td>
    <td>
      ${
        inst.status.startsWith('approved:')
        ? `‚úÖ ${inst.status.replace('approved:', '')}`
        : inst.status === 'approved'
        ? '‚úÖ Paid'
        : inst.status === 'requested'
        ? `üì® ‡¶Ö‡¶®‡ßÅ‡¶∞‡ßã‡¶ß (${inst.note || '‡¶®‡ßã‡¶ü ‡¶®‡ßá‡¶á'})`
        : inst.status === 'rejected'
        ? '‚ùå ‡¶¨‡¶æ‡¶§‡¶ø‡¶≤'
        : '‚åõ Pending'
      }
    </td>
    <td>
      ${inst.status === 'requested'
        ? `<button onclick="approveInstallment('${userKey}', '${loanId}', ${i}, '${inst.note || ''}')">Approve</button>
           <button onclick="rejectInstallment('${userKey}', '${loanId}', ${i})">Reject</button>`
        : ""}
    </td>
  </tr>
`).join("");

      div.innerHTML = `
        <h3>üë§ ${userName} (${userPhone})</h3>
        <p>Amount: ‡ß≥${loan.amount} | Months: ${loan.months} | EMI: ‡ß≥${loan.emi}</p>
        <p>‡¶≤‡ßã‡¶® ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏: ${statusText}</p>
        ${loan.status === "pending" ? `<button onclick="approveLoan('${userKey}', '${loanId}')">Approve</button>` : ""}
        <button onclick="deleteLoan('${userKey}', '${loanId}')">‚ùå Delete</button>

        <table>
          <thead>
            <tr><th>‡¶ï‡¶ø‡¶∏‡ßç‡¶§‡¶ø</th><th>‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£</th><th>‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏</th><th>‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ</th><th>‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶∂‡¶®</th></tr>
          </thead>
          <tbody>
            ${scheduleRows}
          </tbody>
        </table>
        <hr>
      `;
      container.appendChild(div);
    });
  });
});

// Approve Loan
window.approveLoan = function (userKey, loanId) {
  update(ref(db, `users/${userKey}/loans/${loanId}`), {
    status: "approved"
  }).then(() => {
    alert("‚úÖ ‡¶≤‡ßã‡¶® ‡¶Ö‡¶®‡ßÅ‡¶Æ‡ßã‡¶¶‡¶ø‡¶§ ‡¶π‡ßü‡ßá‡¶õ‡ßá");
    location.reload();
  });
};

// Approve Installment
window.approveInstallment = function (userKey, loanId, index, note = "") {

  update(ref(db, `users/${userKey}/loans/${loanId}/schedule/${index}`), {
  status: `approved:${note}`
  }).then(() => {
    alert("‚úÖ ‡¶ï‡¶ø‡¶∏‡ßç‡¶§‡¶ø ‡¶Ö‡¶®‡ßÅ‡¶Æ‡ßã‡¶¶‡¶ø‡¶§ ‡¶π‡ßü‡ßá‡¶õ‡ßá");
    location.reload();
  });
};
// Reject Installment
window.rejectInstallment = function (userKey, loanId, index) {
  update(ref(db, `users/${userKey}/loans/${loanId}/schedule/${index}`), {
    status: "rejected"
  }).then(() => {
    alert("‚ùå ‡¶ï‡¶ø‡¶∏‡ßç‡¶§‡¶ø ‡¶¨‡¶æ‡¶§‡¶ø‡¶≤ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá");
    location.reload();
  });
};

// Delete Loan
window.deleteLoan = function (userKey, loanId) {
  const confirmed = confirm("‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶ø ‡¶∏‡¶§‡ßç‡¶Ø‡¶ø‡¶á ‡¶≤‡ßã‡¶®‡¶ü‡¶ø ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶®?");
  if (!confirmed) return;

  remove(ref(db, `users/${userKey}/loans/${loanId}`)).then(() => {
    alert("‚ùå ‡¶≤‡ßã‡¶® ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá");
    location.reload();
  });
};
